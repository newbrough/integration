###
#
# CHOOSE WHERE YOU WANT TO INSTALL GRAYLOG
# (AND MAKE SURE YOU HAVE LOTS OF DISK SPACE THERE!)
#
INSTALL_BASE=/usr/local
#
###

if [ ! -f install ]
then
  echo ERROR: must run install script from the project directory so it can find the config files
  exit 1
fi

ELASTIC_HOME=$INSTALL_BASE/elasticsearch-0.19.2
DBUSER=coi
DBPASS=coi
GRAYLOG_HOME=$INSTALL_BASE/graylog2-server-0.9.6
GRAYLOG_GUI_HOME=$INSTALL_BASE/graylog2-web-interface-0.9.6

##### prepare machine (needs newer version of rsyslog, not sure about others)
yum update -y

##### install elastic search and service wrapper
# install elastic search
cd $INSTALL_BASE
curl http://cloud.github.com/downloads/elasticsearch/elasticsearch/elasticsearch-0.19.2.tar.gz | tar xzf -
# configure
echo cluster.name: graylog2 >> $ELASTIC_HOME/config/elasticsearch.yml
# install service wrapper
# WARNING: unversioned master
# WARNING: was tanuki the one that had trouble with -Xss??
curl -k -L http://github.com/elasticsearch/elasticsearch-servicewrapper/tarball/master | tar xzf -
dir=$INSTALL_BASE/elasticsearch-elasticsearch-servicewrapper-*
mv $dir/service $ELASTIC_HOME/bin
$ELASTIC_HOME/bin/service/elasticsearch install
# start service
/etc/init.d/elasticsearch start

##### install mongoDB
# WARNING: uses several GB in /var/lib
cat > /etc/yum.repos.d/10gen.repo << EOF-REPO
[10gen]
name=10gen Repository
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64
gpgcheck=0
enabled=1
EOF-REPO
yum install -y mongo-10gen mongo-10gen-server
# start DB (first time take forever to init DB files)
/etc/init.d/mongod start
echo waiting for mongoDB to start
ports=0
while [ "$ports" -eq 0 ]
do
  ports=`netstat -an | grep 27017 | grep -c LISTEN`
  sleep 10
done
echo mongoDB is running
# create graylog user
mongo << EOF-MONGO
use graylog2
db.addUser('$DBUSER','$DBPASS')
EOF-MONGO

##### install graylog2 server
curl http://cloud.github.com/downloads/Graylog2/graylog2-server/graylog2-server-0.9.6.tar.gz | tar xzf -
# install and edit config file
sed	-e 's/mongodb_useauth = true/mongodb_useauth = false/' \
	-e "s/mongodb_user = .*/mongodb_user = $DBUSER/" \
	-e "s/mongodb_password = .*/mongodb_password = $DBPASS/" \
	$GRAYLOG_HOME/graylog2.conf.example > /etc/graylog2.conf
# stupid tricks to get around heredoc syntax
D='$'
B='`'
# create startup script
cat > /etc/init.d/graylog2-server << EOF-GRAYLOG-INIT
#!/bin/sh
#
# graylog2-server:   graylog2 message collector
#
# chkconfig: - 98 02
# description:  This daemon listens for syslog and GELF messages and stores them in mongodb
#
CMD=${D}1

start() {
    echo "Starting graylog2-server ..."
    nohup java -jar $GRAYLOG_HOME/graylog2-server.jar > /var/log/graylog2.log 2>&1 &
}

stop() {
    PID=${B}cat /tmp/graylog2.pid${B}
    echo "Stopping graylog2-server (${D}PID) ..."
    kill ${D}PID
}

restart() {
    echo "Restarting graylog2-server ..."
    stop
    start
}

case "${D}CMD" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    *)
        echo "Usage ${D}0 {start|stop|restart}"
        RETVAL=1
esac
EOF-GRAYLOG-INIT
chmod +x /etc/init.d/graylog2-server
# start the service
/etc/init.d/graylog2-server start

##### install graylog2 GUI
# install ruby stuff
yum install -y ruby rubygems ruby-rake ruby-devel
curl  http://cloud.github.com/downloads/Graylog2/graylog2-web-interface/graylog2-web-interface-0.9.6.tar.gz | tar xzf -
# configure to not update every 30min
sed -i 'bak' 's/allow_version_check: true/allow_version_check: false/' $GRAYLOG_GUI_HOME/config/general.yml 
# i have no clue what the bundler is all about
cd $GRAYLOG_GUI_HOME
gem install bundler
bundle install
# create startup script
cat > /etc/init.d/graylog2-gui << EOF-GRAYLOG-GUI-INIT
#!/bin/sh
#
# graylog2-server:   graylog2 message collector
#
# chkconfig: - 98 02
# description:  This daemon listens for syslog and GELF messages and stores them in mongodb
#
export MONGOID_HOST=localhost
export MONGOID_PORT=27017
export MONGOID_USERNAME=$DBUSER
export MONGOID_PASSWORD=$DBPASS
export MONGOID_DATABASE=graylog2

CMD=${D}1

start() {
    echo "Starting graylog2-gui ..."
    cd $GRAYLOG_GUI_HOME
    nohup script/rails server -e production > /var/log/graylog2-gui.log 2>&1 &
}

stop() {
    PID=${B}pgrep ruby${B}
    echo "Stopping graylog2-gui (${D}PID) ..."
    kill ${D}PID
    sleep 1
    kill -9 ${D}PID
}

restart() {
    echo "Restarting graylog2-gui ..."
    stop
    start
}

case "${D}CMD" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    *)
        echo "Usage ${D}0 {start|stop|restart}"
        RETVAL=1
esac
EOF-GRAYLOG-GUI-INIT
chmod +x /etc/init.d/graylog2-gui
# start GUI
/etc/init.d/graylog2-gui start


##### ON GRAYLOG SERVER
cat > /etc/rsyslog.d/graylog2.conf << EOF-SYSLOG
*.* @127.0.0.1
EOF-SYSLOG
/etc/init.d/rsyslog restart

##### NOW ON EACH HOST
cat > /etc/rsyslog.d/graylog2.conf << EOF-SYSLOG
*.* @remote-graylog-ip-address
EOF-SYSLOG
/etc/init.d/rsyslog restart



##### check connections
echo use graylog2 | mongo
curl -XGET localhost:9200
tail -f /var/log/mongo/mongod.log /var/log/graylog2.log /var/log/graylog2-gui.log $INSTALL_BASE/elasticsearch-0.19.2/logs/graylog2.log $INSTALL_BASE/elasticsearch-0.19.2/logs/service.log


##### configure pycc
logging.yml --> direct to remote
logging.yml --> local syslog, forward to remote
gelf handler
